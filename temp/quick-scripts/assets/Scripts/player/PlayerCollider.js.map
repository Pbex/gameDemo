{"version":3,"sources":["PlayerCollider.js"],"names":["untouchableTime","isUntouchable","cc","Class","extends","Component","properties","gameManager","default","type","Node","stick","id","untouchableTimer","onCollisionEnter","other","self","node","group","getComponent","onHit","decreaseHealth","destoryCall","gameOver","destroy","onLoad","anim","Animation","animState","play","wrapMode","WrapMode","Loop","repeatCount","Infinity","start","update","dt","angel","Math","atan2","dir","y","x","degree","PI","angle","getHealth"],"mappings":"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","file":"PlayerCollider.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\player","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\nvar untouchableTime=5;\r\nvar isUntouchable=false;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        gameManager:{\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        stick : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        id:0,\r\n        untouchableTimer:0,\r\n    },\r\n\r\n     // LIFE-CYCLE CALLBACKS:\r\n     onCollisionEnter:function(other,self){              \r\n        if(other.node.group == 'bullet') //检测碰撞组\r\n        {   \r\n            // console.log(\"on hit\");\r\n            other.getComponent('Bullet').onHit();\r\n            \r\n            //碰撞则播放动画\r\n            // other.node.removeFromParent();\r\n            // this.hp -= 1;\r\n            // if(this.hp == 0 )\r\n            // {\r\n            //   //  enemyReq.add_Score();\r\n            //      this.node.group = 'default'; //防止播放爆炸动画时继续检测导致神奇的事情发生\r\n            //      var en = this.node.getComponent(cc.Animation);\r\n            //      var na = this.node.name;\r\n            //     en.play(na+\"_des\"); //播放动画\r\n            //      en.on('finished',function(e){\r\n            //             this.node.removeFromParent();\r\n            //            // var score = this.node.getComponent(cc.Label);   \r\n            //      },this); \r\n            // }\r\n        }\r\n        this.node.group='default';\r\n        this.gameManager.getComponent('GameManager').decreaseHealth();\r\n        isUntouchable=true;\r\n    },\r\n\r\n    destoryCall(){\r\n        if (this.id==0) {\r\n            this.gameOver();\r\n        }else{\r\n            this.node.destroy();\r\n        }\r\n        \r\n    },\r\n\r\n    gameOver(){\r\n        this.gameManager.getComponent('GameManager').gameOver();\r\n    },\r\n \r\n    onLoad () {\r\n        var anim = this.getComponent(cc.Animation);\r\n        var animState=anim.play();\r\n        animState.wrapMode = cc.WrapMode.Loop;\r\n        animState.repeatCount = Infinity;\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n        // Math.atan2(y,x) 计算出来的结果angel是一个弧度值 数学的弧度是逆时针的 而游戏中是顺时针的\r\n        var angel = Math.atan2(this.stick.getComponent('JoyStick').dir.y, \r\n            this.stick.getComponent('JoyStick').dir.x);\r\n        var degree = angel* 180 / Math.PI;\r\n        degree = degree-90;\r\n        this.node.angle = degree;\r\n\r\n        // console.log(this.gameManager.getComponent('GameManager').getHealth());\r\n        \r\n        if (this.gameManager.getComponent('GameManager').getHealth()==this.id) {\r\n            var anim = this.getComponent(cc.Animation);\r\n            anim.play('defeated');\r\n        }\r\n        if (isUntouchable) {\r\n            if (this.node.group!='default') {\r\n                this.node.group='default';\r\n            }\r\n            this.untouchableTimer+=dt;\r\n            if (this.untouchableTimer>untouchableTime) {\r\n                isUntouchable=false;\r\n                this.node.group='player';\r\n                this.untouchableTimer=0;\r\n            }\r\n        }else{\r\n            if (this.node.group!='player') {\r\n                this.node.group='player';\r\n            }\r\n        }\r\n    },\r\n});\r\n"]}