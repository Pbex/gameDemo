{"version":3,"sources":["..\\..\\..\\..\\assets\\Scripts/assets\\Scripts\\GameManager.js"],"names":["targetScore","Array","cc","Class","extends","Component","properties","health","score","lerpVal","decreaseHealth","getHealth","addScore","getScore","gameOver","director","loadScene","onLoad","game","addPersistRootNode","node","manager","getCollisionManager","enabled","enabledDebugDraw","start","update","dt"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,cAAY,IAAIC,KAAJ,CAAU,GAAV,EAAc,IAAd,EAAmB,IAAnB,CAAhB;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,gBAAO,CAhBC;AAiBRC,eAAO,CAjBC;AAkBRC,iBAAS;AAlBD,KAHP;;AAwBL;AACAC,kBAzBK,4BAyBW;AACZ,aAAKH,MAAL;AACH,KA3BI;AA6BLI,aA7BK,uBA6BM;AACP,eAAO,KAAKJ,MAAZ;AACH,KA/BI;AAiCLK,YAjCK,sBAiCM;AACP,aAAKJ,KAAL,IAAc,KAAKD,MAAnB;AACH,KAnCI;AAqCLM,YArCK,sBAqCK;AACN,eAAO,KAAKL,KAAZ;AACH,KAvCI;AAyCLM,YAzCK,sBAyCK;AACNZ,WAAGa,QAAH,CAAYC,SAAZ,CAAsB,UAAtB;AACH,KA3CI;AA6CLC,UA7CK,oBA6CK;AACNf,WAAGgB,IAAH,CAAQC,kBAAR,CAA2B,KAAKC,IAAhC;AACA,YAAIC,UAAUnB,GAAGa,QAAH,CAAYO,mBAAZ,EAAd;AACAD,gBAAQE,OAAR,GAAkB,IAAlB;AACAF,gBAAQG,gBAAR,GAA2B,IAA3B;AACAtB,WAAGgB,IAAH,CAAQC,kBAAR,CAA2B,KAAKC,IAAhC;AACH,KAnDI;AAqDLK,SArDK,mBAqDI,CAER,CAvDI;AAyDLC,UAzDK,kBAyDGC,EAzDH,EAyDO,CACX;AA1DI,CAAT","file":"GameManager.js","sourceRoot":"..\\..\\..\\..\\assets\\Scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\nvar targetScore=new Array(500,1000,2000);\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        health:3,\r\n        score: 0,\r\n        lerpVal: 0.5,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    decreaseHealth(){\r\n        this.health--;\r\n    },\r\n\r\n    getHealth(){\r\n        return this.health;\r\n    },\r\n\r\n    addScore() {\r\n        this.score += this.health;\r\n    },\r\n\r\n    getScore(){\r\n        return this.score;\r\n    },\r\n\r\n    gameOver(){\r\n        cc.director.loadScene(\"GameOver\");\r\n    },\r\n\r\n    onLoad () {\r\n        cc.game.addPersistRootNode(this.node);\r\n        var manager = cc.director.getCollisionManager();\r\n        manager.enabled = true;\r\n        manager.enabledDebugDraw = true;\r\n        cc.game.addPersistRootNode(this.node);\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n    },\r\n});\r\n"]}