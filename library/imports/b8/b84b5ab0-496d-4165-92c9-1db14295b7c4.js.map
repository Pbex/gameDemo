{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Scripts\\skill/assets\\Scripts\\skill\\SkillReturn.js"],"names":["cc","Class","extends","Component","properties","id","Integer","describe","manager","Node","skillTouched","getComponent","setDescribe","clickReturn","onLoad","node","on","EventType","TOUCH_START","start"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;;AAERC,YAAGL,GAAGM,OAFE;AAGRC,kBAAS,EAHD;AAIRC,iBAAQR,GAAGS;AAJH,KAHP;;AAUL;AACAC,gBAXK,0BAWS;AACV,aAAKF,OAAL,CAAaG,YAAb,CAA0B,cAA1B,EAA0CC,WAA1C,CAAsD,KAAKL,QAA3D;AACA,aAAKC,OAAL,CAAaG,YAAb,CAA0B,cAA1B,EAA0CE,WAA1C,CAAsD,KAAKR,EAA3D;AACH,KAdI;AAeLS,UAfK,oBAeK;AACN,aAAKC,IAAL,CAAUC,EAAV,CAAahB,GAAGS,IAAH,CAAQQ,SAAR,CAAkBC,WAA/B,EAA4C,KAAKR,YAAjD,EAA+D,IAA/D;AACH,KAjBI;AAmBLS,SAnBK,mBAmBI,CAER;AArBI;;AAuBL;AAvBJ","file":"SkillReturn.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\skill","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\n//this script is used for skill select sprite\r\n//it will call skill manager for select skill\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        \r\n        id:cc.Integer,\r\n        describe:\"\",\r\n        manager:cc.Node,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    skillTouched(){\r\n        this.manager.getComponent('SkillManager').setDescribe(this.describe);\r\n        this.manager.getComponent('SkillManager').clickReturn(this.id);\r\n    },\r\n    onLoad () {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.skillTouched, this);\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}