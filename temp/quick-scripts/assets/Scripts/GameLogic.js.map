{"version":3,"sources":["GameLogic.js"],"names":["bulletTimer","directionTimer","counter","bulletDirection","playerBulletTimer","playerBulletTime","cc","Class","extends","Component","properties","gameManager","default","type","Node","boss","bossGenerateScore","slowStone","Prefab","normalStone","fastStone","playerBullet","player","directionSwapTime","bulletSpeed","bulletGenerateTime","scoreLabel","Label","radar","generateBullets","addSpeed","generateRandomPos","randX","randY","Math","random","node","width","height","v2","spawnNewBullets","speedUp","newBullet","instantiate","addChild","setPosition","getComponent","direction","switchDir","speed","maxX","maxY","stopBulletGeneration","startBulletGeneration","bulletGenerator","dt","onLoad","update","getScore","active","position","moveBullet"],"mappings":"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","file":"GameLogic.js","sourceRoot":"..\\..\\..\\..\\assets\\Scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\nvar bulletTimer = 0;\r\nvar directionTimer = 0;\r\nvar counter = 0;\r\nvar bulletDirection = 0;\r\nvar playerBulletTimer = 0;\r\nvar playerBulletTime = 0.5;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        gameManager: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n\r\n        boss: cc.Node,\r\n        bossGenerateScore: 1000,\r\n\r\n        slowStone: cc.Prefab,\r\n        normalStone: cc.Prefab,\r\n        fastStone: cc.Prefab,\r\n        playerBullet: cc.Prefab,\r\n\r\n        player: cc.Node,\r\n\r\n        directionSwapTime: 30,\r\n        bulletSpeed: 1,\r\n        bulletGenerateTime: 1,\r\n\r\n        scoreLabel: {\r\n            default: null,\r\n            type: cc.Label,\r\n        },\r\n\r\n        radar: cc.Node,\r\n\r\n        generateBullets: true,\r\n    },\r\n\r\n    addSpeed() {\r\n        this.bulletGenerateTime -= 0.25;\r\n    },\r\n\r\n    generateRandomPos: function () {\r\n        var randX = 0;\r\n        var randY = 0;\r\n        switch (bulletDirection) {\r\n            case 0://bullets come from up\r\n                randX = (Math.random() - 0.5) * this.node.width;\r\n                randY = this.node.height / 2;\r\n                break;\r\n            case 1://bullets come from right\r\n                randX = this.node.width / 2;\r\n                randY = (Math.random() - 0.5) * this.node.height;\r\n                break;\r\n            case 2://bullets come from down\r\n                randX = (Math.random() - 0.5) * this.node.width;\r\n                randY = -this.node.height / 2;\r\n                break;\r\n            case 3://bullets come from left\r\n                randX = -this.node.width / 2;\r\n                randY = (Math.random() - 0.5) * this.node.height;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return cc.v2(randX, randY);\r\n    },\r\n\r\n    spawnNewBullets: function (speedUp) {\r\n        switch (speedUp) {\r\n            case 4:\r\n                var newBullet = cc.instantiate(this.fastStone);\r\n                break;\r\n            case 2:\r\n                var newBullet = cc.instantiate(this.normalStone);\r\n                break;\r\n            case 1:\r\n                var newBullet = cc.instantiate(this.slowStone);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.node.addChild(newBullet);//add node to canvas\r\n        newBullet.setPosition(this.generateRandomPos());\r\n        newBullet.getComponent('Bullet').direction = bulletDirection;\r\n        newBullet.getComponent('Bullet').switchDir();\r\n        newBullet.getComponent('Bullet').speed = this.bulletSpeed * speedUp;\r\n        newBullet.getComponent('Bullet').maxX = this.node.width;\r\n        newBullet.getComponent('Bullet').maxY = this.node.height;\r\n    },\r\n\r\n    stopBulletGeneration() {\r\n        this.generateBullets = false;\r\n    },\r\n    startBulletGeneration() {\r\n        this.generateBullets = true;\r\n    },\r\n\r\n    bulletGenerator(dt) {\r\n        if (directionTimer > this.directionSwapTime) {\r\n            // console.log('direction changed');\r\n\r\n            bulletDirection++;\r\n            directionTimer = 0;\r\n            bulletDirection %= 4;\r\n            this.addSpeed();\r\n        }\r\n        if (bulletTimer > this.bulletGenerateTime) {\r\n            bulletTimer = 0;\r\n            if (counter < 4) {\r\n                this.spawnNewBullets(4);\r\n            } else if (counter < 7) {\r\n                this.spawnNewBullets(2);\r\n            } else {\r\n                this.spawnNewBullets(1);\r\n            }\r\n            counter++;\r\n            counter %= 10;\r\n        }\r\n        bulletTimer += dt;\r\n        directionTimer += dt;\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n\r\n    },\r\n\r\n    // start () {\r\n\r\n    // },\r\n\r\n    update(dt) {\r\n        if (this.generateBullets) {\r\n            this.bulletGenerator(dt);\r\n        }\r\n        playerBulletTimer += dt;\r\n        if (this.gameManager.getComponent('GameManager').getScore() > this.bossGenerateScore) {\r\n            this.radar.active = false;\r\n            this.boss.active = true;\r\n            this.stopBulletGeneration();\r\n            if (playerBulletTimer > playerBulletTime) {\r\n\r\n                var newBullet = cc.instantiate(this.playerBullet);\r\n                this.node.addChild(newBullet);\r\n                newBullet.setPosition(this.player.position);\r\n                newBullet.getComponent('PlayerBullet').moveBullet(this.boss.position);\r\n                playerBulletTimer = 0;\r\n            }\r\n        } else if (this.gameManager.getComponent('GameManager').getScore() > this.bossGenerateScore - 30) {\r\n            this.radar.active = true;\r\n        }\r\n    },\r\n});\r\n"]}